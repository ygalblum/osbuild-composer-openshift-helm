apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: osbuild-composer
  name: {{ .Release.Name }}-composer
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: osbuild-composer
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: osbuild-composer
    spec:
      containers:
      - env:
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: {{ .Release.Name }}-composer-db
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              key: db.port
              name: {{ .Release.Name }}-composer-db
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              key: db.name
              name: {{ .Release.Name }}-composer-db
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: {{ .Release.Name }}-composer-db
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: {{ .Release.Name }}-composer-db
        - name: PGSSLMODE
          value: {{ .Values.pgsslmode }}
        - name: PGMAXCONNS
          value: {{ .Values.pgmaxconns | quote }}
        image: {{ .Values.image_name }}:{{ .Values.image_tag }}
        livenessProbe:
          exec:
            command:
            - cat
            - /tmp/osbuild-composer-live
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: composer
        ports:
        - containerPort: {{ .Values.composer_api_internal_port }}
          name: composer-api
          protocol: TCP
        - containerPort: {{ .Values.worker_api_port }}
          name: worker-api
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          tcpSocket:
            port: composer-api
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: {{ .Values.cpu_limit }}
            memory: {{ .Values.memory_limit }}
          requests:
            cpu: {{ .Values.cpu_request }}
            memory: {{ .Values.memory_request }}
        volumeMounts:
        - mountPath: /var/lib/osbuild-composer
          name: state-directory
        - mountPath: /var/cache/osbuild-composer
          name: cache-directory
        - mountPath: /etc/osbuild-composer
          name: composer-config
      - image: {{ .Values.proxy_image_name }}:{{ .Values.proxy_image_tag }}
        name: proxy
        ports:
        - containerPort: {{ .Values.composer_api_port }}
          name: composer-api
          protocol: TCP
        - containerPort: {{ .Values.worker_api_port }}
          name: worker-api
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          tcpSocket:
            port: composer-api
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: {{ .Values.proxy_certs_dir }}
          name: composer-secrets
        - mountPath: /etc/envoy
          name: proxy-config
      initContainers:
      - command:
        - /opt/migrate/tern
        - migrate
        - -m
        - /opt/migrate/schemas
        env:
        - name: PGHOST
          valueFrom:
            secretKeyRef:
              key: db.host
              name: {{ .Release.Name }}-composer-db
        - name: PGPORT
          valueFrom:
            secretKeyRef:
              key: db.port
              name: {{ .Release.Name }}-composer-db
        - name: PGDATABASE
          valueFrom:
            secretKeyRef:
              key: db.name
              name: {{ .Release.Name }}-composer-db
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              key: db.user
              name: {{ .Release.Name }}-composer-db
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: db.password
              name: {{ .Release.Name }}-composer-db
        - name: PGSSLMODE
          value: {{ .Values.pgsslmode }}
        image: {{ .Values.image_name }}:{{ .Values.image_tag }}
        name: composer-migrate
      serviceAccountName: {{ .Release.Name }}-image-builder
      volumes:
      - name: composer-config
        configMap:
          name: {{ .Release.Name }}-osbuild-composer-config
      - name: composer-secrets
        secret:
          secretName: {{ .Release.Name }}-osbuild-composer-secrets
      - configMap:
          name: {{ .Release.Name }}-osbuild-composer-proxy-config
        name: proxy-config
      - emptyDir: {}
        name: state-directory
      - emptyDir: {}
        name: cache-directory
